# services:
#     backend:
#         build:
#             context: ./api
#             dockerfile: Dockerfile
#         working_dir: /app
#         command:
#             ["sh", "-lc", "uvicorn fast:application --host 0.0.0.0 --port 7135"]
#         environment:
#             - PYTHONUNBUFFERED=1
#             - UPLOADS_DIR=/data/uploads
#             - MODELS_DIR=/data/models
#         volumes:
#             - ./uploads:/data/uploads # host ←→ container (shared)
#             - ./models:/data/models
#         ports:
#             - "7135:7135"
#         networks:
#             - app-network

#     frontend:
#         # ... your existing config ...
#         environment:
#             - DATABASE_URL=mysql://root:fadifadi2025@mysql:3306/skinconditions
#             - UPLOADS_DIR=/data/uploads
#         volumes:
#             - ./poxapp:/app
#             - /app/node_modules
#             - ./uploads:/data/uploads # same mount path as backend
#         ports:
#             - "7134:7134" # Expose Next.js frontend on port 3000
#         working_dir: /app
#         command: ["npm", "run", "start"]
#         networks:
#             - app-network

#         # MySQL service
#         mysql:
#             image: mysql:8.0 # Use official MySQL image, version 8.0
#             environment:
#                 MYSQL_ROOT_PASSWORD: fadifadi2025 # Replace with a secure password
#                 MYSQL_DATABASE: skinconditions # Default database name (optional)
#                 MYSQL_USER: dux # Optional: create a custom MySQL user
#                 MYSQL_PASSWORD: dux123 # Optional: password for custom user
#             ports:
#                 - "7136:3306" # Map MySQL port 3306 to 7136
#             volumes:
#                 - mysql-data:/var/lib/mysql # Persist MySQL data
#             networks:
#                 - app-network

# volumes:
#     uploads:
#         driver: local
#     models:
#         driver: local
#     mysql-data:
#         driver: local

# # Network for the services to communicate
# networks:
#     app-network:
#         driver: bridge
